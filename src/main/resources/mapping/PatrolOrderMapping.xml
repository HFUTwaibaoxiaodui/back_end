<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace是用于绑定Dao接口的，即面向接口编程-->
<mapper namespace="edu.hfut.back_end.Mapper.PatrolOrderMapper">

    <resultMap id="PatrolOrderResultMap" type="edu.hfut.back_end.Entity.PatrolOrder">
        <result column="order_id" jdbcType="BIGINT" property="orderId"/>
        <result column="creator_id" jdbcType="BIGINT" property="creatorId"/>
        <result column="worker_id" jdbcType="BIGINT" property="workerId"/>
        <result column="order_title" jdbcType="VARCHAR" property="orderTitle"/>
        <result column="order_description" jdbcType="VARCHAR" property="orderDescription"/>
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
        <result column="order_state" jdbcType="VARCHAR" property="orderState"/>
        <result column="order_address" jdbcType="VARCHAR" property="orderAddress"/>
        <result column="plan_start_time" jdbcType="TIMESTAMP" property="planStartTime"/>
        <result column="plan_end_time" jdbcType="TIMESTAMP" property="planEndTime"/>
        <result column="worker_name" jdbcType="VARCHAR" property="workerName"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>

    <select id="selectAll" resultMap="PatrolOrderResultMap" parameterType="edu.hfut.back_end.Entity.PatrolOrder">
        select order_id,
               creator_id,
               worker_id,
               order_title,
               order_description,
               order_number,
               order_state,
               order_address,
               plan_start_time,
               plan_end_time,
               gmt_create,
               gmt_modified
        from patrol_order
        order by gmt_create desc
    </select>

    <insert id="insert" parameterType="edu.hfut.back_end.Entity.PatrolOrder" keyColumn="order_id"
            useGeneratedKeys="true">
        insert into
            patrol_order(
                 order_id,
                 creator_id,
                 worker_id,
                 order_title,
                 order_description,
                 order_number,
                 order_state,
                 order_address,
                 latitude,
                 longitude,
                 plan_start_time,
                 plan_end_time,
                 gmt_create,
                 gmt_modified)
        values (#{orderId},
                #{creatorId},
                #{workerId},
                #{orderTitle},
                #{orderDescription},
                #{orderNumber},
                #{orderState},
                #{orderAddress},
                #{latitude},
                #{longitude},
                #{planStartTime},
                #{planEndTime},
                #{gmtCreate},
                #{gmtModified})
    </insert>

    <update id="update" parameterType="edu.hfut.back_end.Entity.PatrolOrder">
        update patrol_order
        set order_id          = #{orderId},
            creator_id        = #{creatorId},
            worker_id         = #{workerId},
            order_title       = #{orderTitle},
            order_description = #{orderDescription},
            order_number      = #{orderNumber},
            order_state       = #{orderState},
            order_address     = #{orderAddress},
            plan_start_time   = #{planStartTime},
            plan_end_time     = #{planEndTime},
            gmt_modified      = #{gmtModified}
        where order_id = #{orderId}
    </update>

    <update id="updateWorker" parameterType="java.lang.Integer">
        update patrol_order
        set worker_id = #{workerId}
        where order_id = #{orderId}
    </update>

    <delete id="delete" parameterType="BigInteger">
        delete
        from patrol_order
        where order_id = #{orderId}
    </delete>

    <select id="findByOrderTitle" resultMap="PatrolOrderResultMap">
        select order_id, creator_id, worker_id, order_title, order_description, order_number, order_state,
        order_address,
        plan_start_time, plan_end_time, gmt_create, gmt_modified
        from patrol_order
        <where>
            order_title like "%"#{orderTitle, jdbcType=VARCHAR}"%"
        </where>
    </select>

    <select id="findByOrderNumber" resultMap="PatrolOrderResultMap">
        select order_id, creator_id, worker_id, order_title, order_description, order_number, order_state,
        order_address,
        plan_start_time, plan_end_time, gmt_create, gmt_modified
        from patrol_order
        <where>
            order_number like "%"#{orderNumber, jdbcType=VARCHAR}"%"
        </where>
    </select>

    <select id="findByOrderState" resultMap="PatrolOrderResultMap">
        select order_id, creator_id, worker_id, order_title, order_description, order_number, order_state,
        order_address,
        plan_start_time, plan_end_time, gmt_create, gmt_modified
        from patrol_order
        <where>
            order_state like "%"#{orderState, jdbcType=VARCHAR}"%"
        </where>
    </select>

    <select id="findByOrderId" resultMap="PatrolOrderResultMap">
        select order_id,
               creator_id,
               worker_id,
               order_title,
               order_description,
               order_number,
               order_state,
               order_address,
               plan_start_time,
               plan_end_time,
               gmt_create,
               gmt_modified,
               (select real_name from account where account_id = worker_id) as worker_name
        from patrol_order
        where order_id = #{orderId}
    </select>


    <resultMap id="OrderCardDetailMap" type="java.util.HashMap">
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="order_title" jdbcType="VARCHAR" property="orderTitle"/>
        <result column="order_state" jdbcType="VARCHAR" property="orderState"/>
        <result column="creator_name" jdbcType="VARCHAR" property="creatorName"/>
        <result column="order_address" jdbcType="VARCHAR" property="orderAddress"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
    </resultMap>

    <select id="findOrderCardDetail" resultMap="OrderCardDetailMap">
        select
        order_id,
        order_title,
        order_state,
        creator_name,
        order_address,
        create_time,
        order_number
        from
        order_card_detail
        <where>
            <if test="orderState != null and orderState != ''">
                and order_state = #{orderState}
            </if>
            <if test="workerId != null and workerId != ''">
                and worker_id = #{workerId}
            </if>
            <if test="creatorId != null and creatorId != ''">
                and creator_id = #{creatorId}
            </if>
            <if test="orderName != null  and orderName != ''">
                and order_title like concat('%', #{orderName}, '%')
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="findOrderCardDetailCount" resultType="int">
        select
            count(*)
        from
            order_card_detail
        <where>
            <if test="orderState != null">
                and order_state = #{orderState}
            </if>
            <if test="workerId != null">
                and worker_id = #{workerId}
            </if>
            <if test="creatorId != null">
                and creator_id = #{creatorId}
            </if>
        </where>
    </select>

    <update id="updateOrderState" parameterType="edu.hfut.back_end.Entity.PatrolOrder">
        update patrol_order
        set order_state = #{orderState}
        where order_id = #{orderId}
    </update>

    <update id="updateWorkerIdByOrderId" parameterType="java.math.BigInteger">
        update patrol_order
        set worker_id = #{newWorkerId}
        where order_id = #{orderId}
    </update>

    <select id="CountCurrentMonthCreatedOrderById" resultType="java.lang.Integer">
        select count(creator_id) from patrol_order where creator_id=#{accountId} and gmt_create &gt;=#{startDate}
        and gmt_create &lt;#{endDate}
    </select>

    <select id="CountCurrentMonthCreatedAndFinishedOrderById" resultType="java.lang.Integer">
        select count(creator_id) from patrol_order where creator_id=#{accountId} and gmt_create &gt;=#{startDate}
        and gmt_create &lt;#{endDate} and order_state='已完成'
    </select>

    <select id="CountCurrentMonthExceptionOrderById" resultType="java.lang.Integer">
        select count(creator_id) from patrol_order where gmt_create &gt;=#{startDate}
        and gmt_create &lt;#{endDate} and order_state='异常'
    </select>
</mapper>